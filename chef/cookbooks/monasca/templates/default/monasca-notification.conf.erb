[DEFAULT]

#
# From monasca_notification
#

# DEPRECATED: Backward compatible option that allows to pass path to YAML file
# containing configuration of monasca-notitifcation. (string value)
# This option is deprecated for removal since 1.9.0.
# Its value may be silently ignored in the future.
# Reason: monasca-notification has moved to oslo.conf henceusing YAML based
# configuration will be removed after PIKE release.
#yaml_config = <None>

#
# From oslo.log
#

# If set to true, the logging level will be set to DEBUG instead of the default
# INFO level. (boolean value)
# Note: This option can be changed without restarting.
#debug = false

# The name of a logging configuration file. This file is appended to any
# existing logging configuration files. For details about logging configuration
# files, see the Python logging module documentation. Note that when logging
# configuration files are used then all logging configuration is set in the
# configuration file and other logging configuration options are ignored (for
# example, logging_context_format_string). (string value)
# Note: This option can be changed without restarting.
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append = <None>

# Defines the format string for %%(asctime)s in log records. Default:
# %(default)s . This option is ignored if log_config_append is set. (string
# value)
#log_date_format = %Y-%m-%d %H:%M:%S

# (Optional) Name of log file to send logging output to. If no default is set,
# logging will go to stderr as defined by use_stderr. This option is ignored if
# log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file = <None>

# (Optional) The base directory used for relative log_file  paths. This option
# is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir = <None>
log_dir = /var/log/monasca-notification/

# Uses logging handler designed to watch file system. When log file is moved or
# removed this handler will open a new log file with specified path
# instantaneously. It makes sense only if log_file option is specified and Linux
# platform is used. This option is ignored if log_config_append is set. (boolean
# value)
#watch_log_file = false

# Use syslog for logging. Existing syslog format is DEPRECATED and will be
# changed later to honor RFC5424. This option is ignored if log_config_append is
# set. (boolean value)
#use_syslog = false

# Enable journald for logging. If running in a systemd environment you may wish
# to enable journal support. Doing so will use the journal native protocol which
# includes structured metadata in addition to log messages.This option is
# ignored if log_config_append is set. (boolean value)
#use_journal = false

# Syslog facility to receive log lines. This option is ignored if
# log_config_append is set. (string value)
#syslog_log_facility = LOG_USER

# Use JSON formatting for logging. This option is ignored if log_config_append
# is set. (boolean value)
#use_json = false

# Log output to standard error. This option is ignored if log_config_append is
# set. (boolean value)
#use_stderr = false

# Format string to use for log messages with context. (string value)
#logging_context_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s

# Format string to use for log messages when context is undefined. (string
# value)
#logging_default_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s

# Additional data to append to log message when logging level for the message is
# DEBUG. (string value)
#logging_debug_format_suffix = %(funcName)s %(pathname)s:%(lineno)d

# Prefix each line of exception output with this format. (string value)
#logging_exception_prefix = %(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s

# Defines the format string for %(user_identity)s that is used in
# logging_context_format_string. (string value)
#logging_user_identity_format = %(user)s %(tenant)s %(domain)s %(user_domain)s %(project_domain)s

# List of package logging levels in logger=LEVEL pairs. This option is ignored
# if log_config_append is set. (list value)
#default_log_levels = amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,oslo_messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN,urllib3.connectionpool=WARN,websocket=WARN,requests.packages.urllib3.util.retry=WARN,urllib3.util.retry=WARN,keystonemiddleware=WARN,routes.middleware=WARN,stevedore=WARN,taskflow=WARN,keystoneauth=WARN,oslo.cache=INFO,dogpile.core.dogpile=INFO

# Enables or disables publication of error events. (boolean value)
#publish_errors = false

# The format for an instance that is passed with the log message. (string value)
#instance_format = "[instance: %(uuid)s] "

# The format for an instance UUID that is passed with the log message. (string
# value)
#instance_uuid_format = "[instance: %(uuid)s] "

# Interval, number of seconds, of log rate limiting. (integer value)
#rate_limit_interval = 0

# Maximum number of logged messages per rate_limit_interval. (integer value)
#rate_limit_burst = 0

# Log level name used by rate limiting: CRITICAL, ERROR, INFO, WARNING, DEBUG or
# empty string. Logs with level greater or equal to rate_limit_except_level are
# not filtered. An empty string means that all levels are filtered. (string
# value)
#rate_limit_except_level = CRITICAL

# Enables or disables fatal status of deprecations. (boolean value)
#fatal_deprecations = false


[alarm_processor]
# Options to configure alarm processor.

#
# From monasca_notification
#

# DEPRECATED: Number of alarm processors to spawn (integer value)
# Minimum value: 1
# This option is deprecated for removal since 1.8.0.
# Its value may be silently ignored in the future.
# Reason: Options is not used in the current code and will be removed in future
# releases.
#number = 2

# Alarms older than TTL are not processed by notification engine. (integer
# value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#ttl = 14400


[database]
# Driver configuration for database connectivity.

#
# From monasca_notification
#

# Driver name (or full class path) that should be used to handle RDB
# connections. Accepts either short labels ['orm', 'postgresql', 'mysql'] or
# full class names
# ['monasca_notification.common.repositories.orm.orm_repo:OrmRepo',
# 'monasca_notification.common.repositories.postgres.pgsql_repo:PostgresqlRepo',
# 'monasca_notification.common.repositories.mysql.mysql_repo:MysqlRepo'].
# Configuring either of them will require presence of one of following sections
# ['orm', 'postgresql', 'mysql'] inside configuration file. (plugin value)
# Possible values:
# postgresql - <No description provided>
# monasca_notification.common.repositories.mysql.mysql_repo:MysqlRepo - <No
# description provided>
# monasca_notification.common.repositories.orm.orm_repo:OrmRepo - <No
# description provided>
# orm - <No description provided>
# monasca_notification.common.repositories.postgres.pgsql_repo:PostgresqlRepo -
# <No description provided>
# mysql - <No description provided>
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#repo_driver = mysql


[email_notifier]

#
# From monasca_notification
#

# (string value)
#from_addr = <None>
<% if @notification_types_enabled.include?("email") %>
from_addr = <%= @notification_settings['email_smtp_from_address'] %>
<% end %>

# (host address value)
#server = <None>
<% if @notification_types_enabled.include?("email") %>
server = <%= @notification_settings['email_smtp_host'] %>
<% end %>


# (port value)
# Minimum value: 0
# Maximum value: 65535
#port = 25
<% if @notification_types_enabled.include?("email") %>
port = <%= @notification_settings['email_smtp_port'] %>
<% end %>


# (integer value)
# Minimum value: 1
#timeout = 5

# (string value)
#user = <None>
<% if @notification_types_enabled.include?("email") %>
user = <%= @notification_settings['email_smtp_user'] %>
<% end %>

# (string value)
#password = <None>
<% if @notification_types_enabled.include?("email") %>
password = <%= @notification_settings['email_smtp_password'] %>
<% end %>

# (string value)
#grafana_url = <None>


[kafka]
# Options under this group allow to configure valid connection or Kafka queue.

#
# From monasca_notification
#

# List of addresses (with ports) pointing at zookeeper cluster. (list value)
#url = 127.0.0.1:9092
url=<%= @kafka_host %>:<%= node[:monasca][:kafka][:port] %>

# Consumer's group for monasca-notification client. (string value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#group = monasca-notification

# Topic name in kafka where alarm transitions are stored. (string value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#alarm_topic = alarm-state-transitions

# Topic name in kafka where alarm notifications are stored. (string value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#notification_topic = alarm-notifications

# Topic name in kafka where notifications, that have failed to be sent and are
# waiting for retry operations, are stored. (string value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#notification_retry_topic = retry-notifications

# Dict of periodic topics. Keys are the period and values the actual topic names
# in kafka where notifications are stored. (dict value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#periodic = 60:60-seconds-notifications

# Maximum lag for topic that is acceptable by the monasca-notification.
# Notifications that are older than this offset are skipped. (integer value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#max_offset_lag = 600


[keystone]
# Options under this group allow to configure valid connection via
# Keystoneauthentication.

#
# From monasca_notification
#

# This option enable or disable authentication using keystone (boolean value)
#auth_required = false

# URL of identity service (string value)
#auth_url = http://127.0.0.1/identity/v3

# Username (string value)
#username = admin

# Password of identity service (string value)
#password = password

# Name of project (string value)
#project_name = admin

# User domain name (string value)
#user_domain_name = default

# Project domain name (string value)
#project_domain_name = default

# Type of authentication (string value)
#auth_type = password


[mysql]
# Configuration options to configure plain MySQL RBD driver.

#
# From monasca_notification
#

# IP address of MySQL instance. (host address value)
#host = 127.0.0.1
host = <%= @database_host %>

# Port number of MySQL instance. (port value)
# Minimum value: 0
# Maximum value: 65535
#port = 3306

# Username to connect to MySQL instance and given database. (string value)
#user = notification
user = <%= node['monasca']['db_monapi']['user'] %>

# Password to connect to MySQL instance and given database. (string value)
#passwd = password
passwd = <%= node['monasca']['db_monapi']['password'] %>

# A dict of arguments similar to mysql_ssl_set parameters. (dict value)
#ssl =

# Database name available in given MySQL instance. (string value)
#db = mon
db = <%= node['monasca']['db_monapi']['database'] %>


[notification_processor]
# Options to configure notification processor.

#
# From monasca_notification
#

# Number of notification processors to spawn. (integer value)
# Minimum value: 1
#number = 4


[notification_types]
# Group allows to configure available notifiers inside notification engine.

#
# From monasca_notification
#

# List of enabled notification types. You may specif[y full class name
# monasca_notification.plugins.hipchat_notifier.HipChatNotifier or shorter label
# hipchat. (list value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#enabled = jira,hipchat,slack
enabled = <%= @notification_types_enabled.join(",") %>


[orm]
# Configuration options to configure ORM RBD driver.

#
# From monasca_notification
#

# Connection string for sqlalchemy. (string value)
#url = <None>


[postgresql]
# Configuration options to configure plain PostgreSQL RBD driver.

#
# From monasca_notification
#

# IP address of PostgreSQL instance. (host address value)
#host = 127.0.0.1

# Port number of PostgreSQL instance. (port value)
# Minimum value: 0
# Maximum value: 65535
#port = 5432

# Username to connect to PostgreSQL instance and given database. (string value)
#user = notification

# Password to connect to PostgreSQL instance and given database (string value)
#password = password

# Database name available in given PostgreSQL instance. (string value)
#database = mon


[queues]
# Options under this group allow to configure valid connection sizes of all
# queues.

#
# From monasca_notification
#

# Size of the alarms queue. (integer value)
# Minimum value: 1
#alarms_size = 256

# Size of the finished alarms queue. (integer value)
# Minimum value: 1
#finished_size = 256

# Size of notifications queue. (integer value)
# Minimum value: 1
#notifications_size = 256

# Size of sent notifications queue. Limiting this size reduces potential or re-
# sent notifications after a failure. (integer value)
# Minimum value: 1
#sent_notifications_size = 50


[retry_engine]
# Options under this group allow to configure valid connection for retry engine.

#
# From monasca_notification
#

# How often should retry happen. (integer value)
# Minimum value: 30
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#interval = 30

# How many times should retrying be tried. (integer value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#max_attempts = 5


[statsd]
# Options under this group allow to configure valid connection to statsd server
# launched by monasca-agent.

#
# From monasca_notification
#

# Enable or disable self monitoring. (boolean value)
#enable = true

# IP address of statsd server. (host address value)
#host = 127.0.0.1

# Port of statsd server. (port value)
# Minimum value: 0
# Maximum value: 65535
#port = 8125


[zookeeper]
# Options under this group allow to configure settings for zookeeper handling.

#
# From monasca_notification
#

# List of addresses (with ports) pointing at zookeeper cluster. (list value)
#url = 127.0.0.1:2181
url = <%= @zookeeper_host %>:<%= node[:monasca][:zookeeper][:client_port] %>

# Path in zookeeper tree to track notification offsets. (string value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#notification_path = /notification/alarms

# Path in zookeeper tree to track notification retries offsets. (string value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#notification_retry_path = /notification/retry

# Paths in zookeeper tree to track periodic offsets. Keys must be integers
# describing the interval of periodic notification. Values are actual paths
# inside zookeeper tree. (dict value)
# Advanced Option: intended for advanced users and not used
# by the majority of users, and might have a significant
# effect on stability and/or performance.
#periodic_path = 60:/notification/60_seconds
