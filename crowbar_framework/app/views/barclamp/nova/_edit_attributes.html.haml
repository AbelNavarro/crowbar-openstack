
%input#proposal_attributes{:type => "hidden", :name => "proposal_attributes", :value => @proposal.raw_data['attributes'][@proposal.barclamp].to_json}
%p
  %label{:for => "proposal_attributes"}= t('.attributes')
  = link_to t('raw'), proposal_barclamp_path(:id => @proposal.name, :controller => @proposal.barclamp, :dep_raw => @dep_raw, :attr_raw => true), :style => "float: right;"
  %div.container
    %p
      %label{ :for => :mysql_instance }= t('.mysql_instance')
      = instance_selector("mysql", :mysql_instance, "mysql_instance", @proposal)
    %p
      %label{ :for => :keystone_instance }= t('.keystone_instance')
      = instance_selector("keystone", :keystone_instance, "keystone_instance", @proposal)
    %p
      %label{ :for => :glance_instance }= t('.glance_instance')
      = instance_selector("glance", :glance_instance, "glance_instance", @proposal)
    %p
      %label{ :for => :verbose }= t('.verbose')
      = select_tag :verbose, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["verbose"].to_s), :onchange => "update_value('verbose', 'verbose', 'boolean')"
    %p
      %label{ :for => :libvirt_type }= t('.libvirt_type')
      = select_tag :libvirt_type, options_for_select([['kvm','kvm'], ['qemu', 'qemu']], @proposal.raw_data['attributes'][@proposal.barclamp]["libvirt_type"].to_s), :onchange => "update_value('libvirt_type', 'libvirt_type', 'string')"
    %p
      %label{ :for => :network_header }= t('.network_header')
    %div.container
      %p
        %label{ :for => :tenant_vlans }= t('.tenant_vlans')
        = select_tag :tenant_vlans, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["network"]["tenant_vlans"].to_s), :onchange => "update_value('network/tenant_vlans', 'tenant_vlans', 'boolean')"
      %p
        %label{ :for => :dhcp_enabled }= t('.dhcp_enabled')
        = select_tag :dhcp_enabled, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["network"]["dhcp_enabled"].to_s), :onchange => "update_value('network/dhcp_enabled', 'dhcp_enabled', 'boolean')"
      %p
        %label{ :for => :ha_enabled }= t('.ha_enabled')
        = select_tag :ha_enabled, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["network"]["ha_enabled"].to_s), :onchange => "update_value('network/ha_enabled', 'ha_enabled', 'boolean')"
      %p
        %label{ :for => :allow_same_net_traffic }= t('.allow_same_net_traffic')
        = select_tag :allow_same_net_traffic, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["network"]["allow_same_net_traffic"].to_s), :onchange => "update_value('network/allow_same_net_traffic', 'allow_same_net_traffic', 'boolean')"
      %p
        %label{ :for => :num_networks }= t('.num_networks')
        %input#num_networks{:type => "text", :name => "num_networks", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["network"]["num_networks"], :onchange => "update_value('network/num_networks','num_networks', 'integer')"}
      %p
        %label{ :for => :network_size }= t('.network_size')
        %input#network_size{:type => "text", :name => "network_size", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["network"]["network_size"], :onchange => "update_value('network/network_size','network_size', 'integer')"}
