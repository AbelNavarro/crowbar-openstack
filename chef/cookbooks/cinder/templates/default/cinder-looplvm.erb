#! /bin/sh
# Generated by chef

LOOP_LVMS="<%= @loop_lvm_paths %>"
EXIT_CODE=0

echo_status()
{
    if [ $? -ne 0 ]; then
        echo " failed"
        EXIT_CODE=1
    else
        echo " done"
    fi
}

find_associated_loopdev()
{
    losetup -j $LOOP_LVM 2>/dev/null | head -n1 | cut -d: -f1
}

case "$1" in
    start)
        for LOOP_LVM in $LOOP_LVMS; do
             if [ -f $LOOP_LVM ]; then
                 loopdev=$(find_associated_loopdev)
                 if [ -z "$loopdev" -o ! -b "$loopdev" ]; then
                     echo -n "Loop mounting $LOOP_LVM"
                     losetup -f $LOOP_LVM
                     echo_status

                     # tell LVM to rescan the new device
                     loopdev=$(find_associated_loopdev)
                     /sbin/lvm pvscan --cache $loopdev

                 elif [ -b "$loopdev" ]; then
                     echo "Loop mount unnecessary; $LOOP_LVM already available via $loopdev"
                 fi
             fi
        done
    ;;
    stop)
        for LOOP_LVM in $LOOP_LVMS; do
             loopdev=$(find_associated_loopdev)
             if [ -b "$loopdev" ]; then
                 echo -n "Disabling loop mount of $LOOP_LVM"
                 losetup -d $loopdev
                 echo_status
             else
                 echo "Could not find loop mount of $LOOP_LVM"
             fi
        done
        ;;

    *)
        echo "Usage: $0 {start|stop}"
        exit 1
        ;;
esac

exit $EXIT_CODE
